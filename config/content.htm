<h1>About</h1>
<p>組員1:41023108 柯惠心 組員2:41023110紀宜馨</p>
<p>倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag3">https://github.com/mdecd2023/2a-pj1ag3</a></p>
<p>網站:<a href="https://mdecd2023.github.io/2a-pj1ag3/">https://mdecd2023.github.io/2a-pj1ag3/</a></p>
<h1>各組網站及倉儲</h1>
<h2>hw1</h2>
<p><a href="https://mdecd2023.github.io/2a-pj1ag1/content/index.html">2a-pj1ag1</a>(<a href="https://github.com/mdecd2023/2a-pj1ag1">github 2a-pj1ag1</a>)<a href="https://mdecd2023.github.io/2a-pj1ag1/content/index.html"></a></p>
<p><a href="https://mdecd2023.github.io/2a-pj1ag2/content/index.html">2a-pj1ag2</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag2">github 2a-pj1ag2</a><span>)</span></p>
<p><span><a href="https://mdecd2023.github.io/2a-pj1ag3/content/index.html">2a-pj1ag3</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag3">github 2a-pj1ag3</a><span>)</span></span></p>
<p><span><span><a href="https://mdecd2023.github.io/2a-pj1ag4/content/index.html">2a-pj1ag4</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag4">github 2a-pj1ag4</a><span>)</span></span></span></p>
<p><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag5/content/index.html">2a-pj1ag5</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag5">github 2a-pj1ag5</a><span>)</span></span></span></span></p>
<p><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag6/content/index.html">2a-pj1ag6</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag6">github 2a-pj1ag6</a><span>)</span></span></span></span></span></p>
<p><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag7/content/index.html">2a-pj1ag7</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag7">github 2a-pj1ag7</a><span>)</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag8/content/index.html">2a-pj1ag8</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag8">github 2a-pj1ag8</a><span>)</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag9/content/index.html">2a-pj1ag9</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag9">github 2a-pj1ag9</a><span>)</span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag10/content/index.html">2a-pj1ag10</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag10">github 2a-pj1ag10</a><span>)</span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag11/content/index.html">2a-pj1ag11</a>(</span><a href="https://github.com/mdecd2023/2a-pj1ag11">github 2a-pj1ag11</a><span>)</span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag12/content/index.html">2a-pj1ag12</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag12">github 2a-pj1ag12</a><span>)</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag13/content/index.html">2a-pj1ag13</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag13">github 2a-pj1ag13</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag14/content/index.html">2a-pj1ag14</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag14">github 2a-pj1ag14</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag15/content/index.html">2a-pj1ag15</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag15">github 2a-pj1ag15</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag16/content/index.html">2a-pj1ag16</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag16">github 2a-pj1ag16</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag17/content/index.html">2a-pj1ag17</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag17">github 2a-pj1ag17</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag18/content/index.html">2a-pj1ag18</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag18">github 2a-pj1ag18</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag19/content/index.html">2a-pj1ag19</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag19">github 2a-pj1ag19</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag20/content/index.html">2a-pj1ag20</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag20">github 2a-pj1ag20</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://mdecd2023.github.io/2a-pj1ag21/content/index.html">2a-pj1ag21</a><span>(</span><a href="https://github.com/mdecd2023/2a-pj1ag21">github 2a-pj1ag21</a><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<h1>專案計劃</h1>
<p><br/><span style="background-color: #ffff00;">1.產品</span>：讓機器人程式執行重複的行為的的重複重複多的的體態以以以。出撞反應與作用力的滾動。 增加模擬對塊的行為，以球體模擬重新出現的行為並自動刪除。</p>
<p><span style="background-color: #ffff00;">2.產品定義</span>：應用軟件工程訓練構建模型，使用程序設計完成特定任務的簡單移動機器人。</p>
<p><span style="background-color: #ffff00;">3.產品介紹</span>：機器人會自己指令指令自動自動自動自動自動次人類使用者啟動。機器人通常通常通常執行執行任務重複性重複性任務重複性任務重複性且且且且比比人類感知機能的共規律，以計算機為核心的自動化機體。</p>
<p><span style="background-color: #ffff00;">4.初始設計</span>：簡單訓練所以用最簡單化的外部觀察組合讓其模擬機器人的重新執行操作，對基準指令進行操作。</p>
<p><span style="background-color: #ffff00;">5.試驗與測試</span>：目標製造出兩球體撞擊泡泡球機器人。</p>
<p><span style="background-color: #ffff00;">6.產品開發流程範例</span>：<a href="https://mde.tw/pjcopsim/content/bubbleRobTutorial">https://mde.tw/pjcopsim/content/bubbleRobTutorial</a></p>
<p><span style="background-color: #ffff00;">7.團隊有哪些成員</span>：柯惠心.紀宜馨</p>
<p><span style="background-color: #ffff00;">8.成員分配項目</span>:柯惠心負責繪製泡泡球機器人相關程式，紀宜馨負責排版並寫專案計畫。</p>
<h1>w3</h1>
<h2>Tutorial1</h2>
<p>心得:目前我們組進度為將pj1ag3網站做出並將其push至遠端。</p>
<p>組員完成項目:組員1 將網站架設出來並做第一次網頁push</p>
<p><span>                  組員2 </span>網站架設後還未acp</p>
<p><img alt="" height="270" src="/images/螢幕擷取畫面 2023-03-06 213410.png" width="530"/></p>
<h3>BubbleRob</h3>
<p>球體碰撞教程:<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/CiI7d6_wVQY" title="YouTube video player" width="560"></iframe></p>
<p><span>球體碰撞結果:</span></p>
<p><span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/fRIurHlLoys" title="YouTube video player" width="560"></iframe></span></p>
<p><span>泡泡球機器人繪製:</span></p>
<p><span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wcx4TBpVxbw" title="YouTube video player" width="560"></iframe>泡泡球機器人碰撞實驗:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4V4faIP2cvc" title="YouTube video player" width="560"></iframe></p>
<h1>w4</h1>
<h4><span style="font-weight: 400;">4.1.2 可碰撞对象</span></h4>
<p><span style="font-weight: 400;">  可碰撞物体是可以测试与其他可碰撞物体碰撞的物体，即将记录碰撞状态的物体。 这并不意味着它们会对碰撞做出响应（即可响应），这是不同的。 可碰撞对象包括：</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">虚拟对象</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">形状</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">OC树</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">点云</span></li>
</ul>
<p><span style="font-weight: 400;">  由于基于点，因此虚拟对象和点云只能与OC树（基于体积）发生碰撞。</span></p>
<p><span style="font-weight: 400;">  集合也是可碰撞的，因为它们可能包含可碰撞的对象。</span></p>
<p><span style="font-weight: 400;">  可碰撞对象可以单独启用或禁用其可碰撞属性（默认情况下为非纯图形、OC树和点云启用）。 这可以在对象通用属性中设置，也可以通过sim.setObjectSpecialProperty API函数设置。</span></p>
<p><span style="font-weight: 400;">  此外，根据可碰撞对象的相关模型特性（如果它们是模型的一部分），可碰撞对象的可碰撞特性可以被替代。 有关详细信息，请参考模型对话框。</span></p>
<p><span style="font-weight: 400;">參考出處:</span></p>
<h1>w5</h1>
<p>1.tcexam 新帳號設定<br/>2.程式開發是沒有版本的如何讓他有版本?版本控制系統允許我們針對原始碼做分支，不同的版本控制系統當然有不同的指令或操作方式來做分支。版本控制系統共通的觀念。<br/>*檔案庫（repository）<br/>*工作複本（Working Copy）<br/>*基準線（baseline）<br/>匯入.取出.更動.版次.提交.更新.合併.衝突.解決衝突.分支.標記<br/>3.有gitt pull了可以顯示合併過程<br/>4.要把過程顯示出來差別前後的更新<br/>5.目的是啟動執行後再複製貼上，還是複製貼上再啟動。先啟動會使兩個球撞開後球不見，並沒有按步驟執行。<br/>6.為什麼在執行的時候所做的設定會恢復原狀?<br/>7.為什麼要留專案檔?因為檔案會比較大<br/>8.三段程式執行順序是怎樣?function sysCall_ini執行一次，在接重複sensing感測.actuation驅動，cleanup在清理代碼中使用的任何資源<br/>9.執行緒跟非執行緒差別? 多執行緒和非同步操作兩者都可以達到避免呼叫執行緒阻塞的目的，從而提高軟體的可響應性。甚至有些時候我們就認為多執行緒和非同步操作是等同的概念。但是，多執行緒和非同步操作還是有一些區別的。而這些區別造成了使用多執行緒和非同步操作的時機的區別。</p>
<p><strong>coppeliasim問題與解析:</strong></p>
<h1>w6</h1>
<h2>BubbleRob雙人對戰</h2>
<p><span style="background-color: #ffff00;">設計:</span>由單人泡泡球機器人環境直接新增一個一樣的機器人，並將環境改成能雙人對戰，其中還包括進球時得分機制，最後還能在回合結束後重新進行計分。</p>
<p><span style="background-color: #ffff00;">問題討論:</span></p>