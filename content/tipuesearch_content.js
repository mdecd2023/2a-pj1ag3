var tipuesearch = {"pages": [{'title': 'About', 'text': '組員1:41023108 柯惠心 組員2:41023110紀宜馨 \n 倉儲: https://github.com/mdecd2023/2a-pj1ag3 \n 網站: https://mdecd2023.github.io/2a-pj1ag3/ \n', 'tags': '', 'url': 'About.html'}, {'title': '各組網站及倉儲', 'text': '', 'tags': '', 'url': '各組網站及倉儲.html'}, {'title': 'hw1', 'text': '2a-pj1ag1 ( github 2a-pj1ag1 ) \n 2a-pj1ag2 ( github 2a-pj1ag2 ) \n 2a-pj1ag3 ( github 2a-pj1ag3 ) \n 2a-pj1ag4 ( github 2a-pj1ag4 ) \n 2a-pj1ag5 ( github 2a-pj1ag5 ) \n 2a-pj1ag6 ( github 2a-pj1ag6 ) \n 2a-pj1ag7 ( github 2a-pj1ag7 ) \n 2a-pj1ag8 ( github 2a-pj1ag8 ) \n 2a-pj1ag9 ( github 2a-pj1ag9 ) \n 2a-pj1ag10 ( github 2a-pj1ag10 ) \n 2a-pj1ag11 ( github 2a-pj1ag11 ) \n 2a-pj1ag12 ( github 2a-pj1ag12 ) \n 2a-pj1ag13 ( github 2a-pj1ag13 ) \n 2a-pj1ag14 ( github 2a-pj1ag14 ) \n 2a-pj1ag15 ( github 2a-pj1ag15 ) \n 2a-pj1ag16 ( github 2a-pj1ag16 ) \n 2a-pj1ag17 ( github 2a-pj1ag17 ) \n 2a-pj1ag18 ( github 2a-pj1ag18 ) \n 2a-pj1ag19 ( github 2a-pj1ag19 ) \n 2a-pj1ag20 ( github 2a-pj1ag20 ) \n 2a-pj1ag21 ( github 2a-pj1ag21 ) \n', 'tags': '', 'url': 'hw1.html'}, {'title': '專案計劃', 'text': '1.產品 ：讓機器人程式執行重複的行為的的重複重複多的的體態以以以。出撞反應與作用力的滾動。 增加模擬對塊的行為，以球體模擬重新出現的行為並自動刪除。 \n 2.產品定義 ：應用軟件工程訓練構建模型，使用程序設計完成特定任務的簡單移動機器人。 \n 3.產品介紹 ：機器人會自己指令指令自動自動自動自動自動次人類使用者啟動。機器人通常通常通常執行執行任務重複性重複性任務重複性任務重複性且且且且比比人類感知機能的共規律，以計算機為核心的自動化機體。 \n 4.初始設計 ：簡單訓練所以用最簡單化的外部觀察組合讓其模擬機器人的重新執行操作，對基準指令進行操作。 \n 5.試驗與測試 ：目標製造出兩球體撞擊泡泡球機器人。 \n 6.產品開發流程範例 ： https://mde.tw/pjcopsim/content/bubbleRobTutorial \n 7.團隊有哪些成員 ：柯惠心.紀宜馨 \n 8.成員分配項目 :柯惠心負責繪製泡泡球機器人相關程式，紀宜馨負責排版並寫專案計畫。 \n', 'tags': '', 'url': '專案計劃.html'}, {'title': 'w3', 'text': '', 'tags': '', 'url': 'w3.html'}, {'title': 'Tutorial1', 'text': '心得:目前我們組進度為將pj1ag3網站做出並將其push至遠端。 \n 組員完成項目:組員1 將網站架設出來並做第一次網頁push \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 組員2\xa0 網站架設後還未acp \n \n', 'tags': '', 'url': 'Tutorial1.html'}, {'title': 'BubbleRob', 'text': '球體碰撞教程: \n 球體碰撞結果: \n \n 泡泡球機器人繪製: \n 泡泡球機器人碰撞實驗: \n \n', 'tags': '', 'url': 'BubbleRob.html'}, {'title': 'w4', 'text': '4.1.2 可碰撞对象 \n \u2003\u2003可碰撞物体是可以测试与其他可碰撞物体碰撞的物体，即将记录碰撞状态的物体。 这并不意味着它们会对碰撞做出响应（即可响应），这是不同的。 可碰撞对象包括： \n \n 虚拟对象 \n 形状 \n OC树 \n 点云 \n \n \u2003\u2003由于基于点，因此虚拟对象和点云只能与OC树（基于体积）发生碰撞。 \n \u2003\u2003集合也是可碰撞的，因为它们可能包含可碰撞的对象。 \n \u2003\u2003可碰撞对象可以单独启用或禁用其可碰撞属性（默认情况下为非纯图形、OC树和点云启用）。 这可以在对象通用属性中设置，也可以通过sim.setObjectSpecialProperty API函数设置。 \n \u2003\u2003此外，根据可碰撞对象的相关模型特性（如果它们是模型的一部分），可碰撞对象的可碰撞特性可以被替代。 有关详细信息，请参考模型对话框。 \n 參考出處: \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '1.tcexam 新帳號設定 2.程式開發是沒有版本的如何讓他有版本?版本控制系統允許我們針對原始碼做分支，不同的版本控制系統當然有不同的指令或操作方式來做分支。版本控制系統共通的觀念。 *檔案庫（repository） *工作複本（Working Copy） *基準線（baseline） 匯入.取出.更動.版次.提交.更新.合併.衝突.解決衝突.分支.標記 3.有gitt pull了可以顯示合併過程 4.要把過程顯示出來差別前後的更新 5.目的是啟動執行後再複製貼上，還是複製貼上再啟動。先啟動會使兩個球撞開後球不見，並沒有按步驟執行。 6.為什麼在執行的時候所做的設定會恢復原狀? 7.為什麼要留專案檔?因為檔案會比較大 8.三段程式執行順序是怎樣?function sysCall_ini執行一次，在接重複sensing感測.actuation驅動，cleanup在清理代碼中使用的任何資源 9.執行緒跟非執行緒差別? 多執行緒和非同步操作兩者都可以達到避免呼叫執行緒阻塞的目的，從而提高軟體的可響應性。甚至有些時候我們就認為多執行緒和非同步操作是等同的概念。但是，多執行緒和非同步操作還是有一些區別的。而這些區別造成了使用多執行緒和非同步操作的時機的區別。 \n coppeliasim問題與解析:', 'tags': '', 'url': 'w5.html'}]};